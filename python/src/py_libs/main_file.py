import os
import score_game_using_random

print(dir(score_game_using_random))

print(score_game_using_random.rolldice())

if __name__ == "__mian__":
    print("we are in main\n")
    print(help(score_game_using_random.Players))


'''
refer https://github.com/python/cpython/blob/main/Lib/random.py to know 
- how _all_ is used to control what to import to another file when module is imported
- to know how class and methods are managed to allow access
- overall package / module structure
'''

'''
    The attributes you mentioned, such as __builtins__, __cached__, __doc__, __file__, __loader__, __name__, __package__, and __spec__, are special attributes that exist in Python modules. These attributes provide information about the module and its execution context. Let's briefly discuss each one:

    __builtins__: This attribute provides access to the built-in namespace, which contains functions and objects built into the Python interpreter. It allows access to functions like len(), print(), etc.

    __cached__: This attribute holds the path to the compiled bytecode file (.pyc) generated by the Python interpreter. It helps in speeding up the loading of modules.

    __doc__: This attribute contains the docstring of the module, which is a string providing documentation or comments about the module.

    __file__: This attribute holds the path to the Python script or module file. If the module is built-in or dynamically created, it may not have this attribute.

    __loader__: This attribute is an object that is responsible for loading the module. It is part of the importlib machinery introduced in Python 3.

    __name__: This attribute contains the name of the module. When a script is executed, this attribute is set to "__main__".

    __package__: This attribute contains the name of the package to which the module belongs. It is None for top-level modules.

    __spec__: This attribute contains the module specification, providing information about how the module was located and loaded. It is also part of the importlib machinery introduced in Python 3.
'''